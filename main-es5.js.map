{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/place.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","place","title","param1","params","getData","subscribe","response","data","error","console","getPeople","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","PlaceService","http","apiUrl","peopleUrl","apiKey","httpOptions","headers","httpParams","key","hasOwnProperty","set","get","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { PlaceService } from './place.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private place : PlaceService) {}\n  title = 'kiosk';\n\n  param1: string = '';\n  data: any;\n  getData() {\n    const params = this.param1;\n    this.place.getData(params).subscribe(\n      response => {\n        this.data = response;\n      },\n      error => {\n        console.error('Error fetching data', error);\n      }\n    );\n  }\n\n  getPeople() {\n    this.place.getPeople().subscribe(\n      response => {\n        this.data = response;\n      },\n      error => {\n        console.error('Error fetching data', error);\n      }\n    );\n  }\n}\n","<div class=\"top-bar\">\n  <div class=\"title\">\n    Place<span class=\"highlight\">OS</span>\n  </div>\n</div>\n\n<div class=\"data-container\">\n<div class=\"container\">\n  <p>Please enter your email address or scan your QR code.</p>\n  <input type=\"text\" [(ngModel)]=\"param1\" placeholder=\"Enter email\" class=\"input\">\n  <button (click)=\"getData()\" class=\"fetch-button\">Find Details</button>\n</div>\n</div>\n\n<div *ngIf=\"data\" class=\"data-container\">\n  <pre>{{ data | json }}</pre>\n</div>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { del, get, patch, post, put, query } from '@placeos/ts-client';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaceService {\n  private apiUrl = `/api/staff/v1/guests`;\n  private peopleUrl = `/api/staff/v1/people`;\n  private apiKey = `aed95f28b5a445eb2b30243a8524d85f.gN36Ag5rR7d7FMsfta5YNLi0TBCpxeyBopqTQvSueXo`;\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'X-API-Key': this.apiKey\n    })\n  }\n\n  constructor(private http: HttpClient) { }\n\n  getData(params?: any): Observable<any> {\n    return get(`${this.apiUrl}?email=${params}`);\n  }\n  \n  getPeople(params?: any): Observable<any> {\n    let httpParams = new HttpParams();\n    if (params){\n      for (const key in params){\n        if (params.hasOwnProperty(key)) {\n          httpParams = httpParams.set(key, params[key]);\n        }\n      }\n    }\n    return this.http.get(this.peopleUrl, { params:httpParams, ...this.httpOptions });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}